plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // Kotlin Serialization 用プラグイン
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.10'
}

android {
    namespace 'com.whispercppdemo'
    compileSdk 34

    defaultConfig {
        applicationId "com.whispercppdemo"
        minSdk 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // VectorDrawable をサポートライブラリで有効化
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // デモ用に debug の署名設定を使う（本番では置き換える）
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.3'
    }
}

dependencies {
    // ネイティブライブラリモジュールの参照
    implementation project(':nativelib')

    // Jetpack Compose 基本UI
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation "androidx.compose.ui:ui:1.5.0"
    implementation "androidx.compose.ui:ui-tooling-preview:1.5.0"
    implementation 'androidx.compose.material:material-icons-core:1.5.0'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.compose.material3:material3:1.1.1'

    // ViewModelとComposeの統合
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'

    // 権限ハンドリング
    implementation "com.google.accompanist:accompanist-permissions:0.28.0"

    // Kotlinコルーチン & シリアライゼーション
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0'

    // テスト
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.5.0"
    debugImplementation "androidx.compose.ui:ui-tooling:1.5.0"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.5.0"
}

//
// サブモジュール（submodule）が初期化されていない場合に自動で初期化
//
tasks.register('checkSubmodule') {
    doLast {
        def submoduleDir = file("nativelib/whisper_core")
        if (!submoduleDir.exists() || submoduleDir.list().length == 0) {
            println "🔄 Initializing submodules..."
            exec {
                commandLine "git", "submodule", "update", "--init", "--recursive"
            }
        } else {
            println "✅ Submodule already initialized."
        }
    }
}

//
// 音声モデル（ggmlモデルなど）をダウンロードするスクリプト実行タスク
//
tasks.register('downloadModel', Exec) {
    commandLine '/bin/bash', './download_models.sh'
}

// ビルド前に submodule & モデルをチェック・ダウンロード
preBuild.dependsOn checkSubmodule
preBuild.dependsOn downloadModel

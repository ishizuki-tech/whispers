plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.whispercpp'

    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }

        // ネイティブビルドのCMake設定
        externalNativeBuild {
            cmake {
                // CMakeで追加の引数が必要な場合、build.gradleにプロパティを定義して対応できます
                // 例: -DGGML_HOME=/your/path に対応するプロパティ
                if (project.hasProperty('GGML_HOME')) {
                    arguments "-DGGML_HOME=${project.property('GGML_HOME')}"
                }
                // 以下のような OpenCL 対応構成も条件付きで追加可能
                if (project.findProperty('GGML_CLBLAST') == 'ON') {
                    arguments += [
                            "-DGGML_CLBLAST=ON",
                            "-DOPENCL_LIB=${project.property('OPENCL_LIB')}",
                            "-DCLBLAST_HOME=${project.property('CLBLAST_HOME')}",
                            "-DOPENCL_ROOT=${project.property('OPENCL_ROOT')}",
                            "-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=BOTH",
                            "-DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=BOTH"
                    ]
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    ndkVersion "28.1.13356709"

    externalNativeBuild {
        cmake {
            // JNI CMakeLists のパス
            path = file("src/main/jni/whisper/CMakeLists.txt")
        }
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation libs.androidx.core.ktx.v190
    implementation libs.androidx.appcompat
    implementation libs.material.v180
}
